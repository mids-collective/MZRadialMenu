name: Create Release

on:
  push:
    tags-ignore:
      - testing_*

permissions:
  contents: write

env:
  PROJECT_NAME: MZRadialMenu

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x.x'
      - name: Download Dalamud
        run: |
          wget https://goatcorp.github.io/dalamud-distrib/stg/latest.zip
          7z x latest.zip -o$HOME/.xlcore/dalamud/Hooks/dev
      - name: Build
        run: |
          export ver='${{ github.ref_name }}'
          dotnet build -c Release --nologo -p:Version=$ver -p:FileVersion=$ver -p:AssemblyVersion=$ver
      - name: Json Update
        run: |
          export ver="${{ github.ref_name }}"
          export path="./bin/Release/$PROJECT_NAME.json"
          file=$(jq '.AssemblyVersion=env.ver' $path)
          echo $file | jq '.'>$path
      - name: Archive
        run: 7z a $PROJECT_NAME.zip ./bin/Release/*.*
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          path: |
            ${{ env.PROJECT_NAME }}.zip
      - name: Create & Upload Release
        id: upload-release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.PROJECT_NAME }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.PROJECT_NAME }} ${{ github.ref_name }}
      - name: Write out repo.json
        run: |
          export ver="${{ github.ref_name }}"
          export repo="./repo.json"
          export base="$PROJECT_NAME.json"
          file=$(jq '
            .[0].AssemblyVersion=env.ver |
            .[0].TestingAssemblyVersion=env.ver |
            .[0].DownloadLinkInstall="${{ fromJSON(steps.upload-release.outputs.assets)[0].browser_download_url }}" |
            .[0].DownloadLinkTesting="${{ fromJSON(steps.upload-release.outputs.assets)[0].browser_download_url }}" |
            .[0].DownloadLinkUpdate="${{ fromJSON(steps.upload-release.outputs.assets)[0].browser_download_url }}" |
            .[0].Tags=$base[0].Tags |
            .[0].RepoUrl=$base[0].RepoUrl |
            .[0].Punchline=$base[0].Punchline |
            .[0].Description=$base[0].Description
          ' $repo --slurpfile base $base)
          echo $file | jq '.'>$repo
      - name: Commit repo.json
        run: |
          git config --global user.name "Actions User"
          git config --global user.email "actions@github.com"
          git fetch origin main
          git branch -f main ${{ github.sha }}
          git checkout main
          git add repo.json
          git commit -m "[CI] Updating repo.json for ${{ github.ref_name }}" || true
          git push origin main