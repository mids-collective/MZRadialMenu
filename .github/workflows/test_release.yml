name: Create Test Release

on:
  push:
    tags:
      - testing_*

permissions:
  contents: write

env:
  PROJECT_NAME: MZRadialMenu

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x.x'
      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"
      - name: Build
        run: |
          $ver = '${{ github.ref_name }}' -replace 'testing_'
          invoke-expression 'dotnet build --configuration Debug --nologo -p:Version=$ver -p:FileVersion=$ver -p:AssemblyVersion=$ver'
      - name: Json Update
        run: |
          $ver = '${{ github.ref_name }}' -replace 'testing_'
          $path = ""./bin/Debug/$PROJECT_NAME.json"
          $json = Get-Content -Raw $path | ConvertFrom-Json
          $json.AssemblyVersion = $ver
          $content = $json | ConvertTo-Json
          set-content -Path $path -Value $content
      - name: Archive
        run: Compress-Archive -Path bin/Debug/* -DestinationPath $PROJECT_NAME.zip
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          path: |
            ./bin/Debug/*
      - name: Create & Upload Release
        id: upload-release
        uses: softprops/action-gh-release@v1
        with:
          files: $PROJECT_NAME.zip
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Write out repo.json
        run: |
          $verT = '${{ github.ref_name }}'
          $ver = $verT -replace 'testing_'
          $path = './repo.json'
          $json = Get-Content -Raw $path | ConvertFrom-Json
          $json[0].TestingAssemblyVersion = $ver          
          $json[0].DownloadLinkTesting = ${{ fromJSON(steps.upload-release.outputs.assets)[0].browser_download_url }}
          $content = $json | ConvertTo-Json -AsArray
          set-content -Path $path -Value $content

      - name: Commit repo.json
        run: |
          git config --global user.name "Actions User"
          git config --global user.email "actions@github.com"
          git fetch origin main
          git branch -f main ${{ github.sha }}
          git checkout main
          git add repo.json
          git commit -m "[CI] Updating repo.json for ${{ github.ref_name }}" || true
          git push origin main